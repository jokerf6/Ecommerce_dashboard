import type { Metadata } from "next";
import "./globals.css";
import { getMessages } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { Cairo } from "next/font/google";
import React from "react";
import { Provider } from "./provider";

const cairo = Cairo({
  subsets: ["latin"],
  weight: ["400", "500"],
});
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const className = cairo.className;

  // Ensure children is serializable (plain object or React nodes)
  const isValidChildren = React.isValidElement(children) ? children : null;

  return (
    <html>
      <body className={className + " antialiased"}>
        <Provider>
          <div className={`flex flex-col min-h-screen `}>
            <div className="flex-grow overflow-auto">{isValidChildren}</div>{" "}
          </div>
        </Provider>
      </body>
    </html>
  );
}
